name: Build branch

on:
  push:
    branches: [ '*' ]

jobs:
  build:
    name: Build lnd
    runs-on: ubuntu-18.04

    env:
      DOCKER_BUILDKIT: 1

    strategy:
      fail-fast: false
      matrix:
        ver:
          - 0.5
          - 0.6
          - 0.7
          - 0.8
          - 0.9

        arch:
          - amd64
          - arm64
          - arm32v6
          - arm32v7

    steps:
      - uses: actions/checkout@v1.0.0

      - name: Verify all patches apply cleanly
        run: ./scripts/verify-patches.sh "${{matrix.ver}}"



      - name: Build lnd
        run: |
          ARCH=${{matrix.arch}}
          if [[ "${ARCH}" == "arm64" ]]; then
            ARCH="arm64v8"
          fi

          docker build --no-cache "${{matrix.ver}}/" \
            --build-arg "ARCH=${ARCH}" \
            --tag       "lnd:${{matrix.ver}}-${{matrix.arch}}"

      - name: Show built image details
        run: docker images lnd

      - name: Save image to a .tgz file
        run: |
          mkdir -p image/
          docker save "lnd:${{matrix.ver}}-${{matrix.arch}}" | gzip > "image/lnd-${{matrix.ver}}-${{matrix.arch}}.tgz"

      - name: Print sha256sum of produced Docker image
        run: sha256sum "image/lnd-${{matrix.ver}}-${{matrix.arch}}.tgz"

      - name: Add Docker image as build artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: docker-images
          path: image/

      - name: Extract binaries from the built image
        run: |
          mkdir -p bins/ binaries/
          ID=$(docker create "lnd:${{matrix.ver}}-${{matrix.arch}}")
          docker cp  "${ID}:/bin/lnd"    bins/
          docker cp  "${ID}:/bin/lncli"  bins/
          docker rm  "${ID}"

          tar  -C bins/  -cvaf "binaries/lnd-${{matrix.ver}}-${{matrix.arch}}.tgz"  .

      - name: Print sha256sum of extracted binaries
        run: sha256sum bins/*

      - name: Add raw binaries as build artifacts
        uses: actions/upload-artifact@v1.0.0
        with:
          name: binaries
          path: binaries/

  test:
    name: Check sanity of images
    runs-on: ubuntu-18.04
    needs: build

    env:
      QEMU_VERSION: v4.2.0

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: docker-images

      - name: Print sha256sum of all Docker images
        run: sha256sum docker-images/*

      - name: Register self-compiled qemu
        run: docker run --rm --privileged "meedamian/simple-qemu:${QEMU_VERSION}" -p yes

      - name: Load all images locally
        run: ls -d docker-images/* | xargs -I %  docker load -i "%"

      - name: List all tagged images
        run: docker images lnd

      - name: Run sanity checks
        run: |
          for tag in $(docker images lnd --format "{{.Tag}}"); do
            echo
            echo "~~~~~ lnd:${tag} ~~~~~"
            docker inspect "lnd:${tag}" | jq '.'

            docker run --rm                         "lnd:${tag}" --version
            docker run --rm --entrypoint=lncli      "lnd:${tag}" --version

            docker run --rm --entrypoint=uname      "lnd:${tag}" -a
            docker run --rm --entrypoint=cat        "lnd:${tag}" /etc/os-release
            docker run --rm --entrypoint=sha256sum  "lnd:${tag}" /bin/lnd /bin/lncli

            docker run --rm --entrypoint=sh         "lnd:${tag}" -c 'apk add --no-cache file && file /bin/lnd /bin/lncli'
          done
